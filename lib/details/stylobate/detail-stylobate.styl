$stylobate_extends = {}

stylobate_extends($what, $target)
  $stylobate_extends[''+utilus_ident($what)] = $target

called_from($where, $what)
  return utilus_get($where, called_from) == utilus_ident($what)

stylobate_defaults($where, $defaults...)
  $origin = utilus_get($where, called_from) + '_'
  $new = clone($defaults)
  prepend($new, $origin)
  for $param, $index in $new
    if utilus_get($where, $param[0])
      $new[$index] = ''
  _stylobate('', $new)

_stylobate($name, $params)
  $subparams = utilus_remove_first($params)
  push($subparams, called_from $name + $params[0])
  $skin_name = $params[0]
  $context = utilus_get($params, 'context', '')

  // Check if the called stylobate extends anything, if so, call it first,
  // and use the extended stylobate for subitems.
  $extended_name_ending = replace('.*[^-_]+', '', $skin_name)
  $extended_name = $stylobate_extends[$name + $skin_name] || $stylobate_extends[$name + replace('[_-]+$', '', $skin_name)]
  $extended_name = $extended_name + $extended_name_ending if $extended_name
  if $extended_name
    push($subparams, is_extended)
    $skin_name = replace('^' + $name, '', $extended_name)

    if !utilus_is_function($name + $skin_name) and $extended_name_ending == ''
      error('No such “' + $name + '” — “' + $skin_name + '”')

  {$name + $skin_name}($subparams) if $extended_name and !$context and $extended_name_ending == ''
  {$context}
    {$name + $skin_name}($subparams) if $extended_name and $context and $extended_name_ending == ''

  if !utilus_is_function($name + $params[0]) and !$extended_name and !match('[_-]$',$params[0])
    error('No such “' + $name + '” — “' + $params[0] + '”')

  {$name + $params[0]}($subparams) if !$context and utilus_is_function($name + $params[0])
  {$context}
    {$name + $params[0]}($subparams) if $context and utilus_is_function($name + $params[0])

  for $subitem in $subparams
    // There shouldn't be an `if` inside a {$selector}, 'cause
    // there is a crazy stylus bug. When it would be fixed,
    // revert this version to 669082fb35
    $selector = ''
    $foundsubitem = ''
    if is_array($subitem)
      if type($subitem[0]) in ('ident' 'string')
        if match('^(\-|_)', $subitem[0])
          $foundsubitem = $subitem
          if type($subitem[1]) == 'string'
            if match('&', $subitem[1])
              $selector = $subitem[1]
            else
              $foundsubitem = ''
    else
      if type($subitem) in ('ident' 'string')
        if match('^(\-|_)', $subitem)
          $foundsubitem = $subitem

    call_subitem()
      $subitemparams = remove_first(remove_first($foundsubitem))
      push($subitemparams, (parent $subparams))
      $subitemname = $name + replace('[_-]+$', '', $skin_name) + $foundsubitem[0]
      $subitemname = '' unless utilus_is_function($subitemname)

      // If there is extended subitem function, use it, otherwise
      $subitemname_extended = ''
      $subitemname_extended = $name + replace('[_-]+$', '', $params[0]) + $foundsubitem[0] if $extended_name
      $subitemname_extended = '' unless utilus_is_function($subitemname_extended)

      {$subitemname}($subitemparams) unless $context or $subitemname_extended or !$subitemname
      {$subitemname_extended}($subitemparams) unless $context or !$subitemname_extended
      {$context}
        {$subitemname}($subitemparams) if $context and !$subitemname_extended and $subitemname
        {$subitemname_extended}($subitemparams) if $context and $subitemname_extended


    {$selector}
      content: "" if match(':(after|before)', $selector)
      call_subitem() if $foundsubitem != '' and $selector != ''

    if $selector == '' and $foundsubitem != ''
      call_subitem()

stylobate($name, $params)
  if utilus_is_comma_list($params)
    for $item in $params
      _stylobate($name, $item)
  else
    _stylobate($name, $params)
